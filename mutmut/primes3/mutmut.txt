To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived 游뗴 (6)

---- primes.py (6) ----

# mutant 9
--- primes.py
+++ primes.py
@@ -14,7 +14,7 @@
     if limit < 3:
         return [2]
 
-    lmtbf = (limit - 3) // 2
+    lmtbf = (limit - 3) // 3
 
     # napln캩n칤 tabulky, kter치 se bude pros칤vat
     buf = [True] * (lmtbf + 1)

# mutant 16
--- primes.py
+++ primes.py
@@ -20,7 +20,7 @@
     buf = [True] * (lmtbf + 1)
 
     # vlastn칤 pros칤v치n칤
-    for i in range((int(limit ** 0.5) - 3) // 2 + 1):
+    for i in range((int(limit * 0.5) - 3) // 2 + 1):
         if buf[i]:
             p = i + i + 3
             s = p * (i + 1) + i

# mutant 21
--- primes.py
+++ primes.py
@@ -20,7 +20,7 @@
     buf = [True] * (lmtbf + 1)
 
     # vlastn칤 pros칤v치n칤
-    for i in range((int(limit ** 0.5) - 3) // 2 + 1):
+    for i in range((int(limit ** 0.5) - 3) // 3 + 1):
         if buf[i]:
             p = i + i + 3
             s = p * (i + 1) + i

# mutant 23
--- primes.py
+++ primes.py
@@ -20,7 +20,7 @@
     buf = [True] * (lmtbf + 1)
 
     # vlastn칤 pros칤v치n칤
-    for i in range((int(limit ** 0.5) - 3) // 2 + 1):
+    for i in range((int(limit ** 0.5) - 3) // 2 + 2):
         if buf[i]:
             p = i + i + 3
             s = p * (i + 1) + i

# mutant 24
--- primes.py
+++ primes.py
@@ -22,7 +22,7 @@
     # vlastn칤 pros칤v치n칤
     for i in range((int(limit ** 0.5) - 3) // 2 + 1):
         if buf[i]:
-            p = i + i + 3
+            p = i - i + 3
             s = p * (i + 1) + i
             buf[s::p] = [False] * ((lmtbf - s) // p + 1)
 

# mutant 31
--- primes.py
+++ primes.py
@@ -23,7 +23,7 @@
     for i in range((int(limit ** 0.5) - 3) // 2 + 1):
         if buf[i]:
             p = i + i + 3
-            s = p * (i + 1) + i
+            s = p * (i + 1) - i
             buf[s::p] = [False] * ((lmtbf - s) // p + 1)
 
     # vytvo콏en칤 seznamu prvo캜칤sel

