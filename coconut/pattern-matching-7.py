# Compiled Coconut: -----------------------------------------------------------

def list_type(x):  #1 (line in Coconut source)
    _coconut_case_match_to_0 = x  #2 (line in Coconut source)
    _coconut_case_match_check_0 = False  #2 (line in Coconut source)
    _coconut_match_set_name_a = _coconut_sentinel  #2 (line in Coconut source)
    _coconut_match_set_name_b = _coconut_sentinel  #2 (line in Coconut source)
    if (_coconut.isinstance(_coconut_case_match_to_0, _coconut.abc.Sequence)) and (_coconut.len(_coconut_case_match_to_0) == 2):  #2 (line in Coconut source)
        _coconut_match_set_name_a = _coconut_case_match_to_0[0]  #2 (line in Coconut source)
        _coconut_match_set_name_b = _coconut_case_match_to_0[1]  #2 (line in Coconut source)
        _coconut_case_match_check_0 = True  #2 (line in Coconut source)
    if _coconut_case_match_check_0:  #2 (line in Coconut source)
        if _coconut_match_set_name_a is not _coconut_sentinel:  #2 (line in Coconut source)
            a = _coconut_match_set_name_a  #2 (line in Coconut source)
        if _coconut_match_set_name_b is not _coconut_sentinel:  #2 (line in Coconut source)
            b = _coconut_match_set_name_b  #2 (line in Coconut source)
    if _coconut_case_match_check_0:  #2 (line in Coconut source)
        return "list, two items"  #4 (line in Coconut source)
    if not _coconut_case_match_check_0:  #5 (line in Coconut source)
        _coconut_match_set_name_a = _coconut_sentinel  #5 (line in Coconut source)
        if (_coconut.isinstance(_coconut_case_match_to_0, _coconut.abc.Sequence)) and (_coconut.len(_coconut_case_match_to_0) == 1):  #5 (line in Coconut source)
            _coconut_match_set_name_a = _coconut_case_match_to_0[0]  #5 (line in Coconut source)
            _coconut_case_match_check_0 = True  #5 (line in Coconut source)
        if _coconut_case_match_check_0:  #5 (line in Coconut source)
            if _coconut_match_set_name_a is not _coconut_sentinel:  #5 (line in Coconut source)
                a = _coconut_match_set_name_a  #5 (line in Coconut source)
        if _coconut_case_match_check_0:  #5 (line in Coconut source)
            return "list, one item"  #6 (line in Coconut source)
    if not _coconut_case_match_check_0:  #7 (line in Coconut source)
        if (_coconut.isinstance(_coconut_case_match_to_0, _coconut.abc.Sequence)) and (_coconut.len(_coconut_case_match_to_0) == 0):  #7 (line in Coconut source)
            _coconut_case_match_check_0 = True  #7 (line in Coconut source)
        if _coconut_case_match_check_0:  #7 (line in Coconut source)
            return "empty list"  #8 (line in Coconut source)
    if not _coconut_case_match_check_0:  #9 (line in Coconut source)
        _coconut_case_match_check_0 = True  #9 (line in Coconut source)
        if _coconut_case_match_check_0:  #9 (line in Coconut source)
            return "list with more than two items"  #10 (line in Coconut source)



print(list_type([]))  #13 (line in Coconut source)
print(list_type([1,]))  #14 (line in Coconut source)
print(list_type([1, 2]))  #15 (line in Coconut source)
print(list_type([1, 2, 3]))  #16 (line in Coconut source)
